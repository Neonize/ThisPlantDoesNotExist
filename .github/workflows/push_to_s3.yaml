name: Deployment to the S3 Bucket
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - ".github/workflows/deploy-infra.yaml"
      - ".github/dependabot.yml"
      - "cdk/**"
      - "README.md"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

env:
  NODE_VERSION: 16
  REGION: eu-central-1
  ROLE_TO_ASSUME: thisplandoesnotexist-deploy
  WEBSITE_STACKNAME: ThisPlantDoesNotExist

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: npm install
        run: npm install
      - name: Build
        run: npm run build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.REGION }}
      - name: upload to s3
        working-directory: build
        run: |
          BUCKET_NAME=$(aws cloudformation --region us-east-1 describe-stacks --stack-name $WEBSITE_STACKNAME --query "Stacks[0].Outputs[?OutputKey=='bucketName'].OutputValue" --output text)
          aws s3 rm s3://${{ env.BUCKET_NAME }} --recursive
          aws s3 sync . s3://${{ env.BUCKET_NAME }} --quiet --cache-control max-age=15552000 --exclude '*.css' --exclude '*.html'
          aws s3 sync . s3://${{ env.BUCKET_NAME }} --quiet --cache-control max-age=86400 --include '*.css'
          aws s3 sync . s3://${{ env.BUCKET_NAME }} --quiet --cache-control no-cache --include '*.html'
      # - name: invalidate cloudfront distribution
      #   run: aws cloudfront create-invalidation --distribution-id YYYYXXXXX --paths "/*"
